import java_.queue_.ConcurrentLinkedQueue_;
import java_.queue_.PriorityQueue_;

public class JavaneseApplication {
    @SuppressWarnings("all")//关闭警告
    public static void main(String[] args) throws Exception {
//        new FibonacciSequence().test();
//        new TheNumberOf1InBinarySystem().test();
//        new LinkedList_().test();
//        new IntersectionOfTwoLinkedLists().test();
//        new ReverseLinkedList().test();
//        new MergeTwoSortedLists().test();
//        new RemoveDuplicatesFromSortedList().test();
//        new RemoveNthNodeFromEndOfList().test();
//        new BinaryTree_().test();
//        new IsBalancedBinaryTree().test();
//        new InvertBinaryTree().test();
//        new IsSymmetricTree().test();
//        new DiameterOfBinaryTree().test();
//        new MergeTwoBinaryTrees().test();
//        new SumOfLeftLeaves().test();
//        new BubbleSort().test();
//        new SelectionSort().test();
//        new InsertionSort().test();
//        new ShellSort().test();
//        new MergeSort().test();
//        new QuickSort().test();
//        new Heap_().test();
//        new HeapSort().test();
//        new CountingSort().test();
//        new BucketSort().test();
//        new RadixSort().test();
//        new SimpleFactory().test();
//        new ProxyPattern().test();
//        new IsValidBinarySearchTree().test();
//        new Strategy().test();
//        new Prototype().test();
//        new Flyweight().test();
//        new UserThread_VS_DaemonThead().test();
//        new Synchronized().test();
//        new ReentrantLock_().test();
//        new SpuriousWakeup().test();
//        new Volatile_Visibility().test();
//        new InstructionReordering().test();
//        new Deadlock().test();
//        new Runnable_VS_Callable().test();
//        new CountDownLatch_().test();
//        new CyclicBarrier_().test();
//        new Semaphore_().test();
//        new ReadWriteLock().test();
//        new ThreadPool().test();
//        new CustomThreadPool().test();
//        new ForkJoinPool_().test();
//        new File_().test();
//        new FileIOStream().test();
//        new BufferedIOStream().test();
//        new FileReaderWriter().test();
//        new BufferedReaderWriter().test();
//        new IOToReaderWriter().test();
//        new DataIOStream().test();
//        new StandardOutput().test();
//        new ObjectIOStream().test();
//        new TCPConnection().test();
//        new UDPNoConnection().test();
//        new CacheLinePadding().test();
//        new MultiUserServer().test();
//        new Buffer().test();
//        new FileChannel_().test();
//        new Scatter_Gather().test();
//        new Charset_().test();
//        new SocketChannel_Block().test();
//        new SocketChannel_NonBlocking().test();
//        new DatagramChannel_().test();
//        new Pipe_().test();
//        new Reflection_().test();
//        new ReverseLinkedListAddition().test();
//        new IsLoopLinkedList().test();
//        new LongestStringWithoutDuplicateCharacters().test();
//        new RegularExpression().test();
//        new KnuthMorrisPratt().test();
//        new Lambda().test();
//        new FunctionalInterface_().test();
//        new StreamAPI().test();
//        new Optional_().test();
//        new PrivateInterfaceImpl().test();
//        new DiamondOperator().test();
//        new TryWithResources().test();
//        new UnmodifiableCollections().test();
//        new IOTransferTo().test();
//        new StreamAPI_9().test();
//        new LocalVariableTypeInference().test();
//        new CollectionsCopyOf().test();
//        new String_11().test();
//        new Optional_11().test();
//        new HttpClientApi().test();
//        new Switch_12().test();
//        new Files_12().test();
//        new Switch_13().test();
//        new IntegerCache().test();
//        new Threadlocal_().test();
//        new InheritableThreadLocal_().test();
//        new Time_().test();
//        new LinkedListQueue_().test();
//        new ArrayDeque_().test();
//        new PriorityQueue_().test();
        new ConcurrentLinkedQueue_().test();
    }
}